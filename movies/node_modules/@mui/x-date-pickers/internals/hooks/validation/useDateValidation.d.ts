import { Validator } from './useValidation';
import { BaseDateValidationProps, DayValidationProps, MonthValidationProps, YearValidationProps } from './models';
import { DateValidationError } from '../../../models';
export interface DateComponentValidationProps<TDate> extends DayValidationProps<TDate>, MonthValidationProps<TDate>, YearValidationProps<TDate>, Required<BaseDateValidationProps<TDate>> {
}
export declare const validateDate: Validator<any | null, any, DateValidationError, DateComponentValidationProps<any>>;
export declare const useIsDateDisabled: <TDate>({ shouldDisableDate, shouldDisableMonth, shouldDisableYear, minDate, maxDate, disableFuture, disablePast, }: DateComponentValidationProps<TDate>) => (day: TDate | null) => boolean;
